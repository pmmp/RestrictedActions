name: Sync PocketMine-MP primary branches

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to update'
        required: true
        type: choice
        options:
          - "*"
          - minor-next
          - major-next
  repository_dispatch:
    types: pocketmine_mp_branch_sync

jobs:
  merge:
    name: Sync branches
    runs-on: ubuntu-latest

    steps:
    - name: Get sync option
      id: choice
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "branch=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
          echo "branch=*" >> $GITHUB_OUTPUT
        else
          echo "::error Unexpected event type ${{ github.event_name }}"
          exit 1
        fi

    - name: Generate access token
      id: token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.RESTRICTED_ACTIONS_APP_ID }}
        private-key: ${{ secrets.RESTRICTED_ACTIONS_APP_KEY }}
        owner: ${{ github.repository_owner }}
        repositories: PocketMine-MP

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/PocketMine-MP # to allow testing on forks without editing the workflow
        fetch-depth: 0
        token: ${{ steps.token.outputs.token }}

    - name: Get GitHub App User ID
      id: get-user-id
      run: echo "user-id=$(gh api "/users/${{ steps.token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.token.outputs.token }}

    - name: Set Git config
      run: |
        git config user.name '${{ steps.token.outputs.app-slug }}[bot]'
        git config user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.token.outputs.app-slug }}[bot]@users.noreply.github.com'

    - name: Clone composer-git-merge-driver
      uses: actions/checkout@v4
      with:
        repository: balbuf/composer-git-merge-driver
        path: ${{ github.workspace }}/composer-git-merge-driver

    - name: Setup composer-git-merge-driver
      run: |
        echo "${{ github.workspace }}/composer-git-merge-driver/bin" >> $GITHUB_PATH
        echo "composer.lock merge=composer_lock" >> ./.git/info/attributes

        git config merge.composer_lock.name "composer.lock merge driver"
        git config merge.composer_lock.driver "composer-git-merge-driver %O %A %B %L %P"
        git config merge.composer_lock.recursive binary

      #needed for composer and merge driver
    - name: Setup PHP
      uses: shivammathur/setup-php@2.32.0
      with:
        php-version: '8.4'

    - name: Load Composer package cache
      uses: actions/cache@v4
      with:
        path: "~/.cache/composer"
        key: "php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}"
        restore-keys: "php-${{ matrix.php }}-composer-"

    - name: Merge "stable" into "minor-next" and push changes
      if: contains(fromJSON('["minor-next", "*"]'), steps.choice.outputs.branch)
      run: |
        LOWER_BRANCH="stable"
        TARGET_BRANCH="minor-next"
        git checkout -f "$TARGET_BRANCH"
        git pull --no-commit --ff origin "$LOWER_BRANCH" || (git diff && exit 1)

        echo "Making sure merged composer.lock is valid"
        composer update --lock --prefer-dist --no-interaction --ignore-platform-reqs
        echo "Composer install succeeded"
        git status
        git add composer.lock

        git commit \
          -m "Merge '$LOWER_BRANCH' into '$TARGET_BRANCH'" \
          -m "Automatic merge performed by: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          || true # suppress error in case of fast-forward merge
        git push

    - name: Merge "minor-next" into "major-next" and push changes
      if: contains(fromJSON('["major-next", "*"]'), steps.choice.outputs.branch)
      run: |
        LOWER_BRANCH="minor-next"
        TARGET_BRANCH="major-next"
        git checkout -f "$TARGET_BRANCH"
        git pull --no-commit --ff origin "$LOWER_BRANCH" || (git diff && exit 1)

        echo "Making sure merged composer.lock is valid"
        composer update --lock --prefer-dist --no-interaction --ignore-platform-reqs
        echo "Composer install succeeded"
        git status
        git add composer.lock

        git commit \
          -m "Merge '$LOWER_BRANCH' into '$TARGET_BRANCH'" \
          -m "Automatic merge performed by: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          || true # suppress error in case of fast-forward merge
        git push

    - name: Notify Discord webhook
      if: failure() && github.event_name == 'repository_dispatch'
      run: |
        url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        msg="Automatic branch sync failed ([build log](<$url>)), please merge manually ASAP"
        json=$(jq -n --arg msg "$msg" '{"content": $msg}')
        curl -X POST -H "Content-Type: application/json" -d "$json" "${{ secrets.DISCORD_WEBHOOK }}"
